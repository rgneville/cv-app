{"version":3,"sources":["components/Header.js","contexts/CVInfoContext.js","components/GeneralInfoForm.js","components/ExperienceForm.js","components/EducationForm.js","components/ExperienceInfo.js","components/ExperienceList.js","components/EducationInfo.js","components/EducationList.js","components/GeneralInfoList.js","components/SkillForm.js","components/SkillList.js","components/PrintButton.js","App.js","index.js"],"names":["Header","id","height","viewBox","width","xmlns","d","CVInfoContext","createContext","CVInfoContextProvider","props","useState","contactInfo","setContactInfo","position","company","city","jobStart","jobEnd","experience","setExperience","qualification","institution","location","finished","qualifications","setQualifications","skill","skills","setSkills","Provider","value","addContact","firstName","lastName","phone","email","jobTitle","uuid","addJob","removeJob","filter","job","addQualification","removeQualification","certificate","editJob","newState","map","editQualification","addSkill","clearSkills","children","GeneralInfoForm","useContext","setFirstName","setLastName","setPhone","setEmail","setJobTitle","onSubmit","e","preventDefault","type","placeholder","onChange","target","required","ExperienceForm","setPosition","setCompany","setCity","setJobStart","setJobEnd","EducationForm","setQualification","setInstitution","setLocation","setFinished","ExperienceInfo","formVisible","setFormVisible","className","onClick","ExperienceList","EducationInfo","EducationList","GeneralInfoList","SkillForm","setSkill","SkillList","ability","PrintButton","divContents","document","getElementById","innerHTML","a","window","open","write","close","print","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d04c0f85.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nfunction Header() {\r\n    return(\r\n        <header>\r\n            <h1>CV Creator</h1>\r\n            <svg id=\"Icons\" height=\"30\" viewBox=\"0 0 74 74\" width=\"30\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m28.182 69.074a1.013 1.013 0 0 1 -.122-.008 1 1 0 0 1 -.86-.8l-5.193-26.7-19.295-8.476a1 1 0 0 1 .053-1.853l68.69-25.574a1 1 0 0 1 1.321 1.172l-12.966 53.565a1 1 0 0 1 -1.456.64l-20.513-11.322-8.753 18.782a1 1 0 0 1 -.906.574zm-22.408-36.823 17.518 7.7a1 1 0 0 1 .579.725l4.705 24.19 7.905-16.966a1 1 0 0 1 1.389-.453l20.3 11.2 12.22-50.454z\"/><path d=\"m37.387 49.325a1 1 0 0 1 -.771-1.636l29.733-36.047-42.886 30.04a1 1 0 0 1 -1.148-1.638l48.915-34.263a1 1 0 0 1 1.346 1.455l-34.417 41.725a1 1 0 0 1 -.772.364z\"/><path d=\"m28.18 69.078a1 1 0 0 1 -.691-1.724l16.194-15.461a1 1 0 1 1 1.381 1.446l-16.194 15.461a1 1 0 0 1 -.69.278z\"/></svg>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React, { createContext, useState } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nexport const CVInfoContext = createContext();\r\n\r\nconst CVInfoContextProvider = (props) => {\r\n\r\n    //state arrays for holding skill/experience/contact objects\r\n\r\n    const [ contactInfo, setContactInfo ] = useState([]);\r\n\r\n    const [ experience, setExperience ] = useState([\r\n        { position: \"Developer\", \r\n        company: \"We Develop Ltd\", \r\n        city: \"Atlantis\", \r\n        jobStart: \"23/09/2013\", \r\n        jobEnd: \"01/05/2021\",\r\n        id: 1 }\r\n    ])\r\n\r\n    const [ qualifications, setQualifications ] = useState([\r\n        { qualification: \"BA (Hons) - Surf Science\", \r\n        institution: \"University of Atlantis\", \r\n        location: \"Atlantis\", \r\n        finished: \"17/07/2013\",\r\n        id: 1 }\r\n    ])\r\n\r\n    const [ skills, setSkills ] = useState([\r\n        { skill: \"HTML/CSS\", id: 1}\r\n    ]);\r\n\r\n    //methods to be passed to components for changing the above arrays\r\n\r\n    const addContact = ( firstName, lastName, phone, email, jobTitle ) => {\r\n        setContactInfo({ firstName, lastName, phone, email, jobTitle, id: uuid()})\r\n    }\r\n\r\n    const addJob =  ( position, company, city, jobStart, jobEnd ) => {\r\n        setExperience([...experience, {position, company, city, jobStart, jobEnd, id: uuid()}])\r\n    }\r\n\r\n    const addQualification = ( qualification, institution, location, finished ) => {\r\n        setQualifications([...qualifications, {qualification, institution, location, finished, id: uuid()}])\r\n    }\r\n\r\n    const addSkill = ( skill ) => {\r\n        setSkills([...skills, {skill, id: uuid()}]);\r\n    }\r\n\r\n    const removeJob = (id) => {\r\n        setExperience(experience.filter(job => job.id !== id))\r\n    }\r\n\r\n    const removeQualification = (id) => {\r\n        setQualifications(qualifications.filter(certificate => certificate.id !== id))\r\n    }\r\n\r\n    const clearSkills = () => {\r\n        setSkills([]);\r\n    }\r\n\r\n    const editJob = ( position, company, city, jobStart, jobEnd, id ) => {\r\n        const newState = experience.map(job => {\r\n            if (job.id === id) {\r\n                return {position, company, city, jobStart, jobEnd, id}\r\n            } else {\r\n                return job\r\n            }\r\n        })\r\n        return (\r\n            setExperience(newState)\r\n        )\r\n    }\r\n\r\n    const editQualification = ( qualification, institution, location, finished, id ) => {\r\n        const newState = experience.map(certificate => {\r\n            if (certificate.id === id) {\r\n                return {qualification, institution, location, finished, id}\r\n            } else {\r\n                return certificate\r\n            }\r\n        })\r\n        return (\r\n            setQualifications(newState)\r\n        )\r\n    }\r\n\r\n    return ( \r\n        <CVInfoContext.Provider value={{ contactInfo, experience, qualifications, skills, \r\n        addContact, addJob, removeJob, addQualification, removeQualification, editJob, editQualification, addSkill, clearSkills }}>\r\n            {props.children}\r\n        </CVInfoContext.Provider>\r\n     );\r\n}\r\n \r\nexport default CVInfoContextProvider;","import React, { useState, useContext } from \"react\"\r\nimport { CVInfoContext } from \"../contexts/CVInfoContext\";\r\n\r\nfunction GeneralInfoForm() {\r\n    const { addContact } = useContext(CVInfoContext);\r\n    //firstName, lastName, phone, email\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [jobTitle, setJobTitle] = useState('');\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        addContact(firstName, lastName, phone, email, jobTitle);\r\n    }\r\n    return(\r\n        <div>\r\n            <form id=\"general-info-form\" onSubmit={handleSubmit}>\r\n            <label>Contact details:</label>\r\n            <br />\r\n                <input\r\n                    type=\"text\"\r\n                    value={firstName}\r\n                    placeholder=\"First name\"\r\n                    onChange={(e) => setFirstName(e.target.value)}\r\n                    required\r\n                />\r\n                <br />\r\n                <input\r\n                    type=\"text\"\r\n                    value={lastName}\r\n                    placeholder=\"Last name\"\r\n                    onChange={(e) => setLastName(e.target.value)}\r\n                    required\r\n                />\r\n                <br />\r\n                <input\r\n                    type=\"text\"\r\n                    value={phone}\r\n                    placeholder=\"Phone number\"\r\n                    onChange={(e) => setPhone(e.target.value)}\r\n                    required\r\n                />\r\n                <br />\r\n                <input\r\n                    type=\"text\"\r\n                    value={email}\r\n                    placeholder=\"Email address\"\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    required\r\n                />\r\n                <br />\r\n                <input\r\n                    type=\"text\"\r\n                    value={jobTitle}\r\n                    placeholder=\"Job title\"\r\n                    onChange={(e) => setJobTitle(e.target.value)}\r\n                    required\r\n                />\r\n                <br />\r\n                <button>Save</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GeneralInfoForm","import React, { useState, useContext } from \"react\"\r\nimport { CVInfoContext } from \"../contexts/CVInfoContext\";\r\n\r\n function ExperienceForm() {\r\n    const { addJob } = useContext(CVInfoContext);\r\n    //const { position, company, city, jobStart, jobEnd } = useState\r\n    const [position, setPosition] = useState('');\r\n    const [company, setCompany] = useState('');\r\n    const [city, setCity] = useState('');\r\n    const [jobStart, setJobStart] = useState('');\r\n    const [jobEnd, setJobEnd] = useState('');\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        addJob(position, company, city, jobStart, jobEnd);\r\n        setPosition('');\r\n        setCompany('');\r\n        setCity('');\r\n        setJobStart('');\r\n        setJobEnd('');\r\n    }\r\n    return(\r\n        <div>\r\n            <form id=\"experience-form\" onSubmit={handleSubmit}>\r\n            <label>Add a job:</label>\r\n            <br />\r\n                <input\r\n                    type=\"text\"\r\n                    value={position}\r\n                    placeholder=\"Position held\"\r\n                    onChange={(e) => setPosition(e.target.value)}\r\n                />\r\n                <br />\r\n                <input\r\n                    type=\"text\"\r\n                    value={company}\r\n                    placeholder=\"Company\"\r\n                    onChange={(e) => setCompany(e.target.value)}\r\n                />\r\n                <br />\r\n                <input\r\n                    type=\"text\"\r\n                    value={city}\r\n                    placeholder=\"City\"\r\n                    onChange={(e) => setCity(e.target.value)}\r\n                />\r\n                <br />\r\n                <input\r\n                    type=\"text\"\r\n                    value={jobStart}\r\n                    placeholder=\"Start date\"\r\n                    onChange={(e) => setJobStart(e.target.value)}\r\n                />\r\n                <br />\r\n                <input\r\n                    type=\"text\"\r\n                    value={jobEnd}\r\n                    placeholder=\"Finish date\"\r\n                    onChange={(e) => setJobEnd(e.target.value)}\r\n                />\r\n                <br />\r\n                <button>Add</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExperienceForm","import React, { useState, useContext } from \"react\"\r\nimport { CVInfoContext } from \"../contexts/CVInfoContext\";\r\n\r\nfunction EducationForm() {\r\n    const { addQualification } = useContext(CVInfoContext);\r\n    //qualification, institution, location, finished\r\n    const [qualification, setQualification] = useState('');\r\n    const [institution, setInstitution] = useState('');\r\n    const [location, setLocation] = useState('');\r\n    const [finished, setFinished] = useState('');\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        addQualification(qualification, institution, location, finished);\r\n        setQualification('');\r\n        setInstitution('');\r\n        setLocation('');\r\n        setFinished('');\r\n    }\r\n    return(\r\n        <div>\r\n            <form id=\"education-form\" onSubmit={handleSubmit}>\r\n                <label>Add a qualification:</label>\r\n                <br />\r\n                <input\r\n                    type=\"text\"\r\n                    value={qualification}\r\n                    placeholder=\"Qualification name\"\r\n                    onChange={(e) => setQualification(e.target.value)}\r\n                />\r\n                <br />\r\n                <input\r\n                    type=\"text\"\r\n                    value={institution}\r\n                    placeholder=\"Insitution of qualification\"\r\n                    onChange={(e) => setInstitution(e.target.value)}\r\n                />\r\n                <br />\r\n                <input\r\n                    type=\"text\"\r\n                    value={location}\r\n                    placeholder=\"Location\"\r\n                    onChange={(e) => setLocation(e.target.value)}\r\n                />\r\n                <br />\r\n                <input\r\n                    type=\"text\"\r\n                    value={finished}\r\n                    placeholder=\"Finish date\"\r\n                    onChange={(e) => setFinished(e.target.value)}\r\n                />\r\n                <br />\r\n                <button>Add</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EducationForm","import React, { useContext, useState } from 'react';\r\nimport { CVInfoContext } from '../contexts/CVInfoContext';\r\n\r\n//editJob = (position, company, city, jobStart, jobEnd, id)\r\n\r\nconst ExperienceInfo = ({ job }) => {\r\n    const { removeJob, editJob } = useContext(CVInfoContext);\r\n    const [position, setPosition] = useState(job.position);\r\n    const [company, setCompany] = useState(job.company);\r\n    const [city, setCity] = useState(job.city);\r\n    const [jobStart, setJobStart] = useState(job.jobStart);\r\n    const [jobEnd, setJobEnd] = useState(job.jobEnd);\r\n    const [formVisible, setFormVisible] = useState(false);\r\n    const handleDelete = (e) => {\r\n        e.preventDefault();\r\n        removeJob(job.id);\r\n    }\r\n    const handleStartEdit = (e) => {\r\n        e.preventDefault();\r\n        setFormVisible(!formVisible);\r\n    }\r\n    const handleSaveEdit = (e) => {\r\n        e.preventDefault();\r\n        editJob(position, company, city, jobStart, jobEnd, job.id);\r\n        setFormVisible(!formVisible);\r\n    }\r\n    return (\r\n        <div className=\"experience-container\">\r\n            {/* info renders when form not visible, and vice versa - conditional rendering */}\r\n            {formVisible ? null : \r\n            <div className=\"experience-info\">\r\n                <h4>{job.position}</h4>\r\n                <p>{job.company}</p>\r\n                <p>{job.city}</p>\r\n                <p>{job.jobStart} to {job.jobEnd}</p>\r\n                <button onClick={handleDelete}>Delete</button>\r\n                <button onClick={handleStartEdit}>Edit</button>\r\n            </div>\r\n            }\r\n            {formVisible ?\r\n            <div className=\"edit-form\">\r\n            <form>\r\n                <input\r\n                        type=\"text\"\r\n                        value={position}\r\n                        placeholder={job.position}\r\n                        onChange={(e) => setPosition(e.target.value)}\r\n                    />\r\n                    <br />\r\n                    <input\r\n                        type=\"text\"\r\n                        value={company}\r\n                        placeholder={job.company}\r\n                        onChange={(e) => setCompany(e.target.value)}\r\n                    />\r\n                    <br />\r\n                    <input\r\n                        type=\"text\"\r\n                        value={city}\r\n                        placeholder={job.city}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    />\r\n                    <br />\r\n                    <input\r\n                        type=\"text\"\r\n                        value={jobStart}\r\n                        placeholder={job.jobStart}\r\n                        onChange={(e) => setJobStart(e.target.value)}\r\n                    />\r\n                    <br />\r\n                    <input\r\n                        type=\"text\"\r\n                        value={jobEnd}\r\n                        placeholder={job.jobEnd}\r\n                        onChange={(e) => setJobEnd(e.target.value)}\r\n                    />\r\n                    <br />\r\n                    <button onClick={handleSaveEdit}>Save edits</button>\r\n                </form>\r\n            </div>\r\n            : null }\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default ExperienceInfo;","import React, { useContext } from 'react';\r\nimport { CVInfoContext } from '../contexts/CVInfoContext';\r\nimport ExperienceInfo from './ExperienceInfo';\r\n\r\nconst ExperienceList = () => {\r\n    const { experience } = useContext(CVInfoContext);\r\n    return ( \r\n        <div id=\"experience-list\">\r\n            <h3>Employment History</h3>\r\n            {experience.map(job => {\r\n            return (<ExperienceInfo job={job} key={job.id} />)\r\n            })}\r\n        <hr />\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default ExperienceList;","import React, { useContext, useState } from 'react';\r\nimport { CVInfoContext } from '../contexts/CVInfoContext';\r\n\r\n//editQualification = (qualification, institution, location, finished, id)\r\n\r\nconst EducationInfo = ({ certificate }) => {\r\n    const { removeQualification, editQualification } = useContext(CVInfoContext);\r\n    const [qualification, setQualification] = useState(certificate.qualification);\r\n    const [institution, setInstitution] = useState(certificate.institution);\r\n    const [location, setLocation] = useState(certificate.location);\r\n    const [finished, setFinished] = useState(certificate.finished);\r\n    const [formVisible, setFormVisible] = useState(false);\r\n    const handleDelete = (e) => {\r\n        e.preventDefault();\r\n        removeQualification(certificate.id);\r\n    }\r\n    const handleStartEdit = (e) => {\r\n        e.preventDefault();\r\n        setFormVisible(!formVisible);\r\n    }\r\n    const handleSaveEdit = (e) => {\r\n        e.preventDefault();\r\n        editQualification(qualification, institution, location, finished, certificate.id);\r\n        setFormVisible(!formVisible);\r\n    }\r\n    return (\r\n        <div className=\"education-container\">\r\n            {/* info renders when form not visible, and vice versa - conditional rendering */}\r\n            {formVisible ? null : \r\n            <div className=\"education-info\">\r\n                <h4>{certificate.qualification}</h4>\r\n                <p>{certificate.institution}</p>\r\n                <p>{certificate.location}</p>\r\n                <p>Completed {certificate.finished}</p>\r\n                <button onClick={handleDelete}>Delete</button>\r\n                <button onClick={handleStartEdit}>Edit</button>\r\n            </div>\r\n            }\r\n            {formVisible ?\r\n            <div className=\"edit-form\">\r\n                <form>\r\n                    <input\r\n                            type=\"text\"\r\n                            value={qualification}\r\n                            placeholder={certificate.qualification}\r\n                            onChange={(e) => setQualification(e.target.value)}\r\n                        />\r\n                        <br />\r\n                        <input\r\n                            type=\"text\"\r\n                            value={institution}\r\n                            placeholder={certificate.institution}\r\n                            onChange={(e) => setInstitution(e.target.value)}\r\n                        />\r\n                        <br />\r\n                        <input\r\n                            type=\"text\"\r\n                            value={location}\r\n                            placeholder={certificate.location}\r\n                            onChange={(e) => setLocation(e.target.value)}\r\n                        />\r\n                        <br />\r\n                        <input\r\n                            type=\"text\"\r\n                            value={finished}\r\n                            placeholder={certificate.finished}\r\n                            onChange={(e) => setFinished(e.target.value)}\r\n                        />\r\n                        <br />\r\n                        <button onClick={handleSaveEdit}>Save edits</button>\r\n                    </form>\r\n                </div>\r\n                : null }\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default EducationInfo;","import React, { useContext } from 'react';\r\nimport { CVInfoContext } from '../contexts/CVInfoContext';\r\nimport EducationInfo from './EducationInfo';\r\n\r\nconst EducationList = () => {\r\n    const { qualifications } = useContext(CVInfoContext);\r\n    return ( \r\n        <div id=\"education-list\">\r\n            <h3>Education and Qualifications</h3>\r\n            {qualifications.map(certificate => {\r\n            return (<EducationInfo certificate={certificate} key={certificate.id} />)\r\n            })}\r\n        <hr />\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default EducationList;","import React, { useContext } from 'react';\r\nimport { CVInfoContext } from '../contexts/CVInfoContext';\r\n\r\nconst GeneralInfoList = () => {\r\n    const { contactInfo } = useContext(CVInfoContext);\r\n    return ( \r\n        <div id=\"general-info-list\">\r\n            <div id=\"namebox\">\r\n                <h2>{contactInfo.firstName} {contactInfo.lastName}</h2>\r\n                <h4>{contactInfo.jobTitle}</h4>\r\n            </div>\r\n            <div id=\"contact\">\r\n            <h5>Contact information:</h5>\r\n                <p>{contactInfo.phone}</p>\r\n                <p>{contactInfo.email}</p>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default GeneralInfoList;","import React, { useContext, useState } from 'react';\r\nimport { CVInfoContext } from '../contexts/CVInfoContext';\r\n\r\nconst SkillForm = () => {\r\n    const { addSkill } = useContext(CVInfoContext);\r\n    const [ skill, setSkill ] = useState('');\r\n    const handleSave = (e) => {\r\n        e.preventDefault();\r\n        addSkill(skill);\r\n        setSkill('');\r\n    }\r\n    return ( \r\n        <div id=\"skill-form\">\r\n            <form>\r\n            <label>Add a skill:</label>\r\n            <br />\r\n                <input\r\n                    type=\"text\"\r\n                    value={skill}\r\n                    placeholder=\"Skill name\"\r\n                    onChange={(e) => setSkill(e.target.value)}\r\n                />\r\n                <br />\r\n                <button onClick={handleSave}>Add</button>\r\n            </form>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default SkillForm;","import React, { useContext } from 'react';\r\nimport { CVInfoContext } from '../contexts/CVInfoContext';\r\n\r\nconst SkillList = () => {\r\n    const { skills, clearSkills } = useContext(CVInfoContext);\r\n    const handleDelete = (e) => {\r\n        e.preventDefault();\r\n        clearSkills();\r\n    }\r\n    return ( \r\n        <div id=\"skill-list\">\r\n            <h3 id=\"skills-title\">Skills</h3>\r\n            <ul>\r\n                {skills.map(ability => {\r\n                return (<li key={ability.id} id=\"skill-info\">{ability.skill}</li>)\r\n                })}\r\n            </ul>\r\n            <button onClick={handleDelete} className=\"bottomSpace\">Clear skills</button>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default SkillList;","import React from 'react';\r\n\r\nconst PrintButton = () => {\r\n    function printDiv() {\r\n        let divContents = document.getElementById('CV').innerHTML;\r\n        let a = window.open('', '', 'height=500, width=500');\r\n        a.document.write('<html>');\r\n        a.document.write('<body>');\r\n        a.document.write(divContents);\r\n        a.document.write('</body>');\r\n        a.document.write('<style> button { display: none; } </style>');\r\n        //a.document.write('<style> background: white; width: 800px; width: 50%; margin: 0 auto; margin-top: 30px; margin-bottom: 30px; box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px; #CV p { font-size: small; } #CV li { font-size: small; } #CV .experience-info { margin: 6px; } #CV .education-info { margin: 6px; } #CV .skill-info { margin: 6px; } #CV #skills-title { margin-bottom: 8px; } </style>');\r\n        //above is a bit of a semi failed experiment to hardcode the main CV style into the printout...\r\n        a.document.write('</html>');\r\n        a.document.close();\r\n        a.print();\r\n    };\r\n\r\n    return ( \r\n        <div>\r\n            <button type=\"button\" onClick={printDiv} className=\"bottomSpace\">Print Resume Contents</button>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default PrintButton;","import React from \"react\"\nimport Header from \"./components/Header\"\nimport GeneralInfoForm from \"./components/GeneralInfoForm\"\nimport ExperienceForm from \"./components/ExperienceForm\"\nimport CVInfoContextProvider from \"./contexts/CVInfoContext\"\nimport EducationForm from \"./components/EducationForm\"\nimport ExperienceList from \"./components/ExperienceList\"\nimport EducationList from \"./components/EducationList\"\nimport GeneralInfoList from \"./components/GeneralInfoList\"\nimport SkillForm from \"./components/SkillForm\"\nimport SkillList from \"./components/SkillList\"\nimport PrintButton from \"./components/PrintButton\"\n\nfunction App() {\n    return (\n      <div className=\"app\">\n        <CVInfoContextProvider>\n          <div id=\"form-container\">\n            <Header />\n            <GeneralInfoForm />\n            <hr />\n            <ExperienceForm />\n            <hr />\n            <EducationForm />\n            <hr />\n            <SkillForm />\n          </div>\n          <div id=\"CV\">\n            <GeneralInfoList />\n            <ExperienceList />\n            <EducationList />\n            <SkillList />\n          </div>\n          <PrintButton />\n        </CVInfoContextProvider>\n      </div>\n    );\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}